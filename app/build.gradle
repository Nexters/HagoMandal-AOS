import com.greedy0110.hagomandal.App
import com.greedy0110.hagomandal.Dep

plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}

android {
    compileSdk App.compileSdk

    defaultConfig {
        applicationId "com.greedy0110.hagomandal"
        minSdk App.minSdk
        targetSdk App.targetSdk
        versionCode App.versionCode
        versionName App.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
        useIR = true
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion Dep.Compose.Version
        kotlinCompilerVersion Dep.Kotlin.version
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
            excludes += "DebugProbesKt.bin"
        }
    }
    lintOptions {
        abortOnError false
    }
}

dependencies {
    implementation(Dep.Coroutine.core)
    implementation(Dep.Coroutine.android)
    testImplementation(Dep.Coroutine.test)

    implementation(Dep.Android.core)
    implementation(Dep.Android.appcompat)
    implementation(Dep.Android.material)

    implementation(Dep.Compose.ui)
    implementation(Dep.Compose.uiTooling)
    implementation(Dep.Compose.foundation)
    implementation(Dep.Compose.material)
    implementation(Dep.Compose.materialIcon)
    implementation(Dep.Compose.materialIconsExtended)
    implementation(Dep.Compose.activity)
    implementation(Dep.Compose.runtime)
    implementation(Dep.Compose.navigation)

    implementation(Dep.Accompanist.inset)
    implementation(Dep.Accompanist.insetUi)
    implementation(Dep.Accompanist.systemUi)
    implementation(Dep.Accompanist.pager)
    implementation(Dep.Accompanist.indicator)

    testImplementation(Dep.Test.junit)

    implementation(Dep.Dagger.hiltAndroid)
    kapt(Dep.Dagger.hiltCompiler)

    implementation(Dep.Lifecycle.runtime)
    implementation(Dep.Lifecycle.viewModel)

    implementation(Dep.Room.runtime)
    kapt(Dep.Room.compiler)
    testImplementation(Dep.Room.test)

    implementation(Dep.OkHttp.core)
    implementation(Dep.OkHttp.loggingInterceptor)
    testImplementation(Dep.OkHttp.mockWebServer)

    implementation(Dep.Retrofit.core)
    implementation(Dep.Retrofit.converterMoshi)
    testImplementation(Dep.Retrofit.mock)

    implementation(Dep.Moshi.core)
    implementation(Dep.Moshi.kotlin)

    implementation platform(Dep.Firebase.bom)
    implementation(Dep.Firebase.analytics)

    implementation(Dep.timber)
}

// 린트 적용하는 GitHook을 강제한다.
task installGitHook(type: Copy) {
    from new File(rootProject.rootDir, 'pre-commit')
    into { new File(rootProject.rootDir, '.git/hooks') }
    fileMode 0777
}

tasks.getByPath(':app:preBuild').dependsOn installGitHook
